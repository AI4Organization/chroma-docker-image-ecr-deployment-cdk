name: Deployment with AWS CLI & AWS CDK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - dev
      - stg
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
      fail-fast: false # fail all builds if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-deps-

      - name: Cache CDK CLI
        uses: actions/cache@v2
        with:
          path: |
            ~/.cdk
            **/cdk.out
          key: ${{ runner.os }}-node-cdk-${{ hashFiles('**/cdk.json') }}
          restore-keys: |
            ${{ runner.os }}-node-cdk-

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
        continue-on-error: false

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        continue-on-error: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        continue-on-error: false

      - name: Install dependencies
        run: npm ci
        continue-on-error: false

      - name: Run CDK synth
        env:
          CDK_DEPLOY_REGIONS: ${{ env.CDK_DEPLOY_REGIONS }}
          ENVIRONMENTS: ${{ env.ENVIRONMENTS }}
          ECR_REPOSITORY_NAME: ${{ env.ECR_REPOSITORY_NAME }}
          APP_NAME: ${{ env.APP_NAME }}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
        run: npx cdk synth
        continue-on-error: false

      - name: Run CDK Bootstrap
        env:
          CDK_DEPLOY_REGIONS: ${{ env.CDK_DEPLOY_REGIONS }}
          ENVIRONMENTS: ${{ env.ENVIRONMENTS }}
          ECR_REPOSITORY_NAME: ${{ env.ECR_REPOSITORY_NAME }}
          APP_NAME: ${{ env.APP_NAME }}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
        run: npx cdk bootstrap
        continue-on-error: false

      - name: Deploy to AWS using CDK
        run: npx cdk deploy --require-approval never
        continue-on-error: false
